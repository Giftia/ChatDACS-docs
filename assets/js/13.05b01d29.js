(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{451:function(t,s,e){"use strict";e.r(s);var a=e(27),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"插件开发指北"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件开发指北"}},[t._v("#")]),t._v(" 插件开发指北")]),t._v(" "),e("p",[t._v("前辈有句老话说得好，"),e("a",{attrs:{href:"https://koishi.js.org/guide/command/#:~:text=%E7%B3%BB%E7%BB%9F%E5%88%9D%E6%8E%A2-,%E4%B8%80%E4%B8%AA%E6%88%90%E5%8A%9F%E7%9A%84%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%A6%BB%E4%B8%8D%E5%BC%80%E5%BC%BA%E5%A4%A7%E7%9A%84%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F%E3%80%82,-%E6%AD%A3%E5%9B%A0%E4%B8%BA%E5%A6%82%E6%AD%A4",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个成功的机器人离不开强大的指令系统。"),e("OutboundLink")],1),t._v("正因为如此，我们在开发时综合考虑了"),e("code",[t._v("我们所掌握的技术栈")]),t._v("以及"),e("code",[t._v("第三方插件开发者、爱好者所掌握的编码能力")]),t._v("，最终觉得，"),e("code",[t._v("从零开始的开发难度")]),t._v("更贴近大众所希望的开发流程，谁不会喜欢一个简单好玩成就感满满的玩具呢。下面我们将会介绍"),e("code",[t._v("小夜的插件系统是如何实现的")]),t._v("、"),e("code",[t._v("如何开发一个插件")]),t._v("，以及"),e("code",[t._v("如何使用插件")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"小夜的插件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小夜的插件系统"}},[t._v("#")]),t._v(" 小夜的插件系统")]),t._v(" "),e("p",[t._v("小夜的插件系统非常基础，它围绕"),e("a",{attrs:{href:"https://nodejs.org/docs/latest-v14.x/api/modules.html#modules_modules_commonjs_modules",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js原生的简单模块加载系统"),e("OutboundLink")],1),t._v("为核心而开发。使用"),e("code",[t._v("module")]),t._v("的导出语法"),e("code",[t._v("module.exports")]),t._v("，我们可以将一个独立功能的文件导出为一个可以被"),e("code",[t._v("require")]),t._v("的插件。")]),t._v(" "),e("p",[t._v("小夜的插件加载器使用了"),e("a",{attrs:{href:"https://github.com/desislavsd/require.all",target:"_blank",rel:"noopener noreferrer"}},[t._v("require.all"),e("OutboundLink")],1),t._v("模块，这是一个用来"),e("code",[t._v("读取指定目录中的所有文件，并可选择使用自定义函数或参数解析它们")]),t._v("的模块。")]),t._v(" "),e("p",[t._v("插件会暴露出它自己的插件对象，其中包含"),e("code",[t._v("name")]),t._v("、"),e("code",[t._v("version")]),t._v("、"),e("code",[t._v("description")]),t._v("、"),e("code",[t._v("author")]),t._v("、"),e("code",[t._v("execute")]),t._v("等属性。最重要的是"),e("code",[t._v("execute")]),t._v("属性，它是一个函数，当插件被插件遍历器所调用时，"),e("code",[t._v("execute")]),t._v("内的函数会被调用。")]),t._v(" "),e("p",[t._v("当小夜启动时，插件加载器会从"),e("code",[t._v("plugins")]),t._v("文件夹中读取所有的插件，并将其加载到"),e("code",[t._v("plugins")]),t._v("对象中。就那么简单！")]),t._v(" "),e("p",[t._v("...")]),t._v(" "),e("p",[t._v("以上部分实际上是底层实现，稍作了解即可，并不会影响接下来的插件开发。接下来我们将会介绍如何给小夜开发一个插件。")]),t._v(" "),e("h2",{attrs:{id:"开发一个插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发一个插件"}},[t._v("#")]),t._v(" 开发一个插件")]),t._v(" "),e("p",[t._v("我们拿一个非常简单的"),e("code",[t._v("连通性测试插件")]),t._v("插件作为插件模板来讲。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("插件名")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连通性测试插件"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件名，会在插件说明中展示")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("指令")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^[/!]?ping$"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件触发的指令，可使用正则表达式匹配关键词，仅在插件加载时展示")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("版本")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件版本，会在插件说明中展示")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("作者")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Giftina"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件作者，仅在插件加载时展示")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("描述")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PingPong，最基础的响应插件，可基于本插件学习插件的开发。该插件实现了一个可以测试小夜的连通性的功能。"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件说明，仅在插件加载时展示")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("使用示例")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ping"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件的触发示例，会在插件说明中展示")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("预期返回")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Pong!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简单描述一下插件的预期返回，会在插件说明中展示")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n   * ### 插件加载器将会给插件传入如下参数以供下文使用:\n   * @param {String} msg 消息全文\n   * @param {String} userId 用户id\n   * @param {String} userName 用户名\n   * @param {String} groupId 群id\n   * @param {String} groupName 群名\n   * @param {Any} options 其他可选参数\n   * @returns {Object} { type: "返回类型", content: "返回内容" }\n   * ### 插件处理完成后需要返回处理结果，若无需回复则返回空文本： { type: "text", content: "" }\n   * ### 返回值是一个对象，包含以下属性: `{ type: "返回类型", content: "返回内容" }`\n   * ### 返回值的 返回类型 目前有 5 种类型： "text", "picture", "audio", "video", "file":\n   * - text 为文本回复；\n   * - picture 为图片回复，content 可以使用图片链接或者base64编码的图片数据；\n   * - audio 为音频回复，content 可以使用音频链接或者base64编码的音频数据；\n   * - video 为视频回复，content 可以使用视频链接；\n   * - file 为文件回复，content 可以使用文件链接；\n   */')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" groupId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" groupName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 返回 Pong!\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" replyText "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Pong!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" replyText "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("这个插件的功能很好理解：")]),t._v(" "),e("p",[e("strong",[t._v("当小夜接收到 "),e("code",[t._v("/ping")]),t._v(" 或 "),e("code",[t._v("!ping")]),t._v(" 或 "),e("code",[t._v("ping")]),t._v(" 消息时，小夜将会直接回复 "),e("code",[t._v("Pong!")]),t._v("。")])]),t._v(" "),e("p",[t._v("还没写完")]),t._v(" "),e("h2",{attrs:{id:"使用插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用插件"}},[t._v("#")]),t._v(" 使用插件")]),t._v(" "),e("p",[t._v("还没写完")])])}),[],!1,null,null,null);s.default=n.exports}}]);